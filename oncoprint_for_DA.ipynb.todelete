{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    "import re\n",
    "import matplotlib\n",
    "import seaborn\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import scipy.stats as ss\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib import style, colors\n",
    "import matplotlib.patches as patches\n",
    "from matplotlib import gridspec\n",
    "from scipy.cluster.hierarchy import dendrogram, linkage, fcluster, fclusterdata, leaves_list\n",
    "from scipy.spatial.distance import pdist\n",
    "\n",
    "\n",
    "# matplotlib.style.use('ggplot')\n",
    "%matplotlib inline\n",
    "matplotlib.rcParams['figure.figsize'] = (8, 6)\n",
    "from IPython.core.interactiveshell import InteractiveShell\n",
    "InteractiveShell.ast_node_interactivity = \"all\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "in order to simplify and generalize the scripts, the input file need to manipulated prior to plotting in your preferred row and column order"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# constants\n",
    "all_colors = [ \"purple\", \"#E69F00\",\"#009E73\",\"#56B4E9\",\n",
    "              \"#377EB8\",\"#E41A1C\",\"#F0E442\",'black',\"#D55E00\",\"#CC79A7\", 'pink', 'gray']\n",
    "mutations = ['NON_SYNONYMOUS_CODING', \n",
    "             'CODON_INSERTION_DELETION', \n",
    "             'FRAME_SHIFT',              \n",
    "             'SPLICE_ACCEPTOR_DONOR', \n",
    "             'STOP_GAINED',\n",
    "             'Multiple']\n",
    "\n",
    "# make map dictionary\n",
    "map_dict = {k:v for v, k in  enumerate(mutations)} \n",
    "clrs = all_colors[:len(map_dict)]    \n",
    "clrmap_dict = {k:v for k, v in zip(map_dict.keys(), clrs)}\n",
    "cmap = colors.ListedColormap(clrs)\n",
    "mut_colors = [clrmap_dict[m] for m in mutations]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_patches(ax, features, column, clrmap_dict):\n",
    "    k = 0\n",
    "    for feature in features:\n",
    "        types = len(features)\n",
    "        clr = clrmap_dict[feature]\n",
    "        rect = patches.Rectangle((0+column*.2, .9-k*0.1), .1, .05, \n",
    "                             linewidth=0.001,\n",
    "                             edgecolor=clr,\n",
    "                             facecolor=clr)\n",
    "\n",
    "        _ = ax.text(0.15+column*.2, .9-k*0.1+.02, \n",
    "                     feature, \n",
    "                     ha='left', \n",
    "                     va='center', \n",
    "                     fontsize=9)\n",
    "        _ = ax.add_patch(rect)\n",
    "        k+=.6\n",
    "    _ = ax.get_xaxis().set_ticks([])\n",
    "    _ = ax.get_yaxis().set_ticks([])\n",
    "    _ = ax.set_title('')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_oncoprint(df):\n",
    "    nrows = df.shape[0]    \n",
    "    fig = plt.figure(figsize=(12,.55*nrows), facecolor='white')\n",
    "    gs = gridspec.GridSpec(1, 2,                            \n",
    "                           width_ratios=[6,1], \n",
    "\n",
    "                           wspace=0.0, # horizontal space\n",
    "                          )\n",
    "\n",
    "    # plot heatmap for gene mutations\n",
    "    dfm = df.apply(lambda x: x.map(map_dict)).astype(float)\n",
    "    print('plotting mutations! color_mutation mapping relationship:', clrmap_dict)\n",
    "    gs0 = gs[0]\n",
    "    ax0 = plt.subplot(gs0, facecolor='beige')\n",
    "    sns.heatmap(dfm, \n",
    "                ax=ax0, \n",
    "                cmap=cmap,\n",
    "                linewidths=.05,                    \n",
    "                xticklabels=True,\n",
    "                yticklabels=True,\n",
    "                cbar=False) \n",
    "    _ = ax0.tick_params(axis='x', which='major', labelsize=7)\n",
    "    _ = ax0.set_xticklabels(ax0.xaxis.get_majorticklabels(), rotation=90)\n",
    "    _ = ax0.set_xlabel('')\n",
    "    _ = ax0.set_ylabel('')\n",
    "    _ = plt.setp(ax0.get_yticklines(),visible=False)\n",
    "    _ = plt.setp(ax0.get_xticklines(),visible=False)\n",
    "\n",
    "    # plot legend\n",
    "    gs1 = gs[1]\n",
    "    ax1 =  plt.subplot(gs1, frameon=False)\n",
    "    _ = add_patches(ax1, mutations, 2, clrmap_dict)\n",
    "\n",
    "    pf = '{}.oncoprint.png'.format(of)\n",
    "    %time plt.savefig(pf, bbox_inches='tight',dpi=200)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "plotting mutations! color_mutation mapping relationship: {'NON_SYNONYMOUS_CODING': 'purple', 'CODON_INSERTION_DELETION': '#E69F00', 'FRAME_SHIFT': '#009E73', 'SPLICE_ACCEPTOR_DONOR': '#56B4E9', 'STOP_GAINED': '#377EB8', 'Multiple': '#E41A1C'}\n",
      "CPU times: user 1.29 s, sys: 130 ms, total: 1.42 s\n",
      "Wall time: 1.42 s\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x871.2 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# example input file\n",
    "of =  '/home/szong/projects/development/oncoprint/example_oncoprint_input_file.txt'\n",
    "df = pd.read_csv(of, index_col='gene')\n",
    "_ = plot_oncoprint(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
